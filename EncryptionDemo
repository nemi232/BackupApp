using System;
using System.Security.Cryptography;

public class EncryptionHelper
{
    public static byte[] GenerateRandomKey(int keySize)
    {
        using (Aes aes = Aes.Create())
        {
            aes.KeySize = keySize;
            aes.GenerateKey();
            return aes.Key;
        }
    }

    public static byte[] GenerateRandomIV()
    {
        using (Aes aes = Aes.Create())
        {
            aes.GenerateIV();
            return aes.IV;
        }
    }

    public static byte[] Encrypt(string plainText, byte[] key, byte[] iv)
    {
        byte[] cipheredtext;
        using (Aes aes = Aes.Create())
        {
            aes.Key = key;
            aes.IV = iv;
            ICryptoTransform encryptor = aes.CreateEncryptor();
            using (MemoryStream memoryStream = new MemoryStream())
            {
                using (CryptoStream cryptoStream = new CryptoStream(memoryStream, encryptor, CryptoStreamMode.Write))
                {
                    using (StreamWriter streamWriter = new StreamWriter(cryptoStream))
                    {
                        streamWriter.Write(plainText);
                    }
                    cipheredtext = memoryStream.ToArray();
                }
            }
        }
        return cipheredtext;
    }

    public static string Decrypt(byte[] cipheredtext, byte[] key, byte[] iv)
    {
        string plainText = String.Empty;
        using (Aes aes = Aes.Create())
        {
            aes.Key = key;
            aes.IV = iv;
            ICryptoTransform decryptor = aes.CreateDecryptor();
            using (MemoryStream memoryStream = new MemoryStream(cipheredtext))
            {
                using (CryptoStream cryptoStream = new CryptoStream(memoryStream, decryptor, CryptoStreamMode.Read))
                {
                    using (StreamReader streamReader = new StreamReader(cryptoStream))
                    {
                        plainText = streamReader.ReadToEnd();
                    }
                }
            }
        }
        return plainText;
    }
}
